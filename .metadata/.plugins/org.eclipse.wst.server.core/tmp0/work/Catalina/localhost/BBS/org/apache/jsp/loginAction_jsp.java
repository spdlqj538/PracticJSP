/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2022-09-13 03:21:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import user.UserDAO;

public final class loginAction_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("user.UserDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" <!-- script문장 실행을 위함 -->\r\n");
      out.write("\r\n");
  request.setCharacterEncoding("UTF-8"); 
      out.write(" <!-- 건너오는 데이터를 모두 UTF-8 형식으로 변경 -->\r\n");
      user.User user = null;
      user = (user.User) _jspx_page_context.getAttribute("user", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (user == null){
        user = new user.User();
        _jspx_page_context.setAttribute("user", user, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write(" <!-- 현재(loginAction.jsp) page에서 user라는 이름으로 user.User 패키지를 사용 -->\r\n");
      out.write("<!-- form 태그안에 있는 name값을 가져옴 -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userID", request.getParameter("userID"), request, "userID", false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("user"), "userPassword", request.getParameter("userPassword"), request, "userPassword", false);
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta  http-equiv = \"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>게시판</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	 ");
 
	 	String userID = null;
	 	// session.getAttribute()로 부여받은 세션값이 null이 아니라면 부여받은 값을 변수에 저장
	 	if (session.getAttribute("userID") != null) {
	 		userID = (String) session.getAttribute("userID");

	 		
	 	}
	 	
	 	if (userID != null) {
	 		PrintWriter script = response.getWriter();
	 		script.println("<script>");
	 		script.println("alert('이미 로그인이 되어있습니다.')");
	 		script.println("location.href='main.jsp'");
	 		script.println("</script>");
	 		
	 	}
	 	
	 	UserDAO userDAO = new UserDAO(); //userDAO 패키지 사용을 위해 인스턴스 생성
	 	// userDAO 안에 login함수에 id와 password를 넘겨줌
 	 	int result = userDAO.login(user.getUserID(), user.getUserPassword());
	 	
	 	// result로 가져온 값에 따라 실행
	 	if (result == 1) {
	 		// 로그인에 성공한 회원에게 세션값을 부여해줌 "userID"라는 이름으로 해당 유저의 아이디를 세션 값으로 넣어줌 
	 		session.setAttribute("userID", user.getUserID());
	 		
	 		PrintWriter script = response.getWriter();
	 		script.println("<script>");
	 		script.println("location.href = 'main.jsp'");
	 		script.println("</script>");
	 		
	 	} else if (result == 0) {
	 		PrintWriter script = response.getWriter();
	 		script.println("<script>");
	 		script.println("alert('비밀번호가 틀렸습니다.')");
	 		script.println("history.back()");
	 		script.println("</script>");
	 		
	 	} else if (result == -1) {
	 		PrintWriter script = response.getWriter();
	 		script.println("<script>");
	 		script.println("alert('존재하지 않는 아이디입니다.')");
	 		script.println("history.back()");
	 		script.println("</script>");
	 		
	 	} else if (result == -2) {
	 		PrintWriter script = response.getWriter();
	 		script.println("<script>");
	 		script.println("alert('데이터베이스 오류')");
	 		script.println("history.back()");
	 		script.println("</script>");
	 		
	 	}
	 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
